from OpenGL.GL import*
from OpenGL.GLUT import*
import numpy as np
from math import *


def draw_single_circle(r=0.5, xc=0.0, yc=0.0, ro=0.0, go=0.0, bo=0.0, rf=0.0, gf=0.0, bf=0.0 , lw=3.0):
    glLineWidth(lw)
    glColor3f(rf, gf, bf)
    glBegin(GL_POLYGON)
    for theta in np.arange(0, 2 * pi, 0.01):
        x = xc + r * cos(theta)
        y = yc + r * sin(theta)
        glVertex(x, y)
    glEnd()
    glColor3f(ro, go, bo)
    glBegin(GL_LINE_LOOP)
    for theta in np.arange(0, 2 * pi, 0.01):
        x = xc + r * cos(theta)
        y = yc + r * sin(theta)
        glVertex(x, y)
    glEnd()


def draw_circle(r=0.5, xc=0.0, yc=0.0, ro=0.0, go=0.0, bo=0.0, rf=0.0, gf=0.0, bf=0.0 , lw=3.0):
    glLineWidth(lw)
    if xc == 0:
        glColor3f(rf, gf, bf)
        glBegin(GL_POLYGON)
        for theta in np.arange(0, 2*pi, 0.01):
            x = xc + r*cos(theta)
            y = yc + r*sin(theta)
            glVertex(x, y)
        glEnd()
        glColor3f(ro, go, bo)
        glBegin(GL_LINE_LOOP)
        for theta in np.arange(0, 2*pi, 0.01):
            x = xc + r*cos(theta)
            y = yc + r*sin(theta)
            glVertex(x, y)
        glEnd()
    else:
        glColor3f(rf, gf, bf)
        glBegin(GL_POLYGON)
        for theta in np.arange(0, 2 * pi, 0.01):
            x = xc + r * cos(theta)
            y = yc + r * sin(theta)
            glVertex(x, y)
        glEnd()
        glColor3f(ro, go, bo)
        glBegin(GL_LINE_LOOP)
        for theta in np.arange(0, 2 * pi, 0.01):
            x = xc + r * cos(theta)
            y = yc + r * sin(theta)
            glVertex(x, y)
        glEnd()
        glColor3f(rf, gf, bf)
        glBegin(GL_POLYGON)
        for theta in np.arange(0, 2*pi, 0.01):
            x = -xc + r*cos(theta)
            y = yc + r*sin(theta)
            glVertex(x, y)
        glEnd()
        glColor3f(ro, go, bo)
        glBegin(GL_LINE_LOOP)
        for theta in np.arange(0, 2*pi, 0.01):
            x = -xc + r*cos(theta)
            y = yc + r*sin(theta)
            glVertex(x, y)
        glEnd()


def draw_single_rect(l=0.1, w=0.1, xc=0.0, yc=0.0, ro=0.0, go=0.0, bo=0.0, rf=0.0, gf=0.0, bf=0.0, lw=3.0):
    glLineWidth(lw)
    glColor3f(rf, gf, bf)
    glBegin(GL_POLYGON)
    glVertex(l / 2 + xc, w / 2 + yc)
    glVertex(l / 2 + xc, w / 2 - w + yc)
    glVertex(l / 2 - l + xc, w / 2 - w + yc)
    glVertex(l / 2 - l + xc, w / 2 + yc)
    glEnd()
    glColor3f(ro, go, bo)
    glBegin(GL_LINE_LOOP)
    glVertex(l / 2 + xc, w / 2 + yc)
    glVertex(l / 2 + xc, w / 2 - w + yc)
    glVertex(l / 2 - l + xc, w / 2 - w + yc)
    glVertex(l / 2 - l + xc, w / 2 + yc)
    glEnd()


def draw_rect(l=0.1, w=0.1, xc=0.0, yc=0.0, ro=0.0, go=0.0, bo=0.0, rf=0.0, gf=0.0, bf=0.0, lw=3.0):
    glLineWidth(lw)
    if xc == 0:
        glColor3f(rf, gf, bf)
        glBegin(GL_POLYGON)
        glVertex(l/2 + xc, w/2 + yc)
        glVertex(l/2 + xc, w/2 - w + yc)
        glVertex(l/2 - l + xc, w/2 - w + yc)
        glVertex(l/2 - l + xc, w/2 + yc)
        glEnd()
        glColor3f(ro, go, bo)
        glBegin(GL_LINE_LOOP)
        glVertex(l/2 + xc, w/2 + yc)
        glVertex(l/2 + xc, w/2 - w + yc)
        glVertex(l/2 - l + xc, w/2 - w + yc)
        glVertex(l/2 - l + xc, w/2 + yc)
        glEnd()
    else:
        glColor3f(rf, gf, bf)
        glBegin(GL_POLYGON)
        glVertex(l / 2 + xc, w / 2 + yc)
        glVertex(l / 2 + xc, w / 2 - w + yc)
        glVertex(l / 2 - l + xc, w / 2 - w + yc)
        glVertex(l / 2 - l + xc, w / 2 + yc)
        glEnd()
        glColor3f(ro, go, bo)
        glBegin(GL_LINE_LOOP)
        glVertex(l / 2 + xc, w / 2 + yc)
        glVertex(l / 2 + xc, w / 2 - w + yc)
        glVertex(l / 2 - l + xc, w / 2 - w + yc)
        glVertex(l / 2 - l + xc, w / 2 + yc)
        glEnd()
        glColor3f(rf, gf, bf)
        glBegin(GL_POLYGON)
        glVertex(l / 2 - xc, w / 2 + yc)
        glVertex(l / 2 - xc, w / 2 - w + yc)
        glVertex(l / 2 - l - xc, w / 2 - w + yc)
        glVertex(l / 2 - l - xc, w / 2 + yc)
        glEnd()
        glColor3f(ro, go, bo)
        glBegin(GL_LINE_LOOP)
        glVertex(l / 2 - xc, w / 2 + yc)
        glVertex(l / 2 - xc, w / 2 - w + yc)
        glVertex(l / 2 - l - xc, w / 2 - w + yc)
        glVertex(l / 2 - l - xc, w / 2 + yc)
        glEnd()


def draw():
    glClearColor(.999, .995, .97, 0)
    glClear(GL_COLOR_BUFFER_BIT)
   # joints (1st layer)
    draw_rect(.049, .039, -.373, -0.52, .2, .2, .3,.5, .55, .6, 3)  # small wheel joints
    draw_rect(.049, .099, -.337, -0.5, .2, .2, .3, .5, .55, .6, 3)  # larger joints
    draw_rect(.1, .14, -.32, -0.42, .2, .2, .3, .5, .55, .6, 3)     # largest joint
    # nick + face
    draw_circle(.021, .056, .66, .2, .3, .2, 1, 1, 1, 1)
    draw_rect(.08, .22, 0, .65, .2, .2, .3, 1, .8, 0.4, 3)          # nick
    draw_rect(.095, .03, 0, .5756, .2, .2, .3, 1, .8, 0.4, 3)       # nick
    draw_rect(.095, .03, 0, .5456, .2, .2, .3, 1, .8, 0.4, 3)       # nick
    draw_rect(.095, .03, 0, .5165, .2, .2, .3, 1, .8, 0.4, 3)       # nick
    draw_rect(.095, .095, 0, .72, .2, .2, .3, 1, .8, 0.4, 3)        # nick
    draw_rect(.25, .35, -.51, -0.48, .2, .2, .3, .3, .37, .6, 3)    # wheels
    draw_rect(.25, .05, -.51, -0.48, .2, .2, .3, .3, .37, .6, 3)    # wheels
    draw_rect(.25, .05, -.51, -0.43, .2, .2, .3, .3, .37, .6, 3)  # wheels
    draw_rect(.25, .05, -.51, -0.38, .2, .2, .3, .3, .37, .6, 3)  # wheels
    draw_rect(.25, .05, -.51, -0.53, .2, .2, .3, .3, .37, .6, 3)  # wheels
    draw_rect(.25, .05, -.51, -0.58, .2, .2, .3, .3, .37, .6, 3)  # wheels
    # body (2nd layer)
    draw_rect(.76, .2, 0, .359, .2, .2, .3,  1, .8, 0.4, 3)         # shoulders
    draw_rect(.7, .8, 0, 0, .2, .2, .3,  1, .8, 0.4, 3)             # main body
    draw_single_rect(.35, .4, -.151, .088, 1, .9, 0.4,  1, .9, 0.4, 9)             # main body
    draw_rect(.7, .2, 0, .4, .2, .2, .3,  1, .8, 0.4, 3)            # indicators board
    # accessories
    draw_rect(.7, .07, 0, .4, .2, .2, .3,  1, .8, 0.4, 3)           # indicators board
    draw_rect(.5, .2, 0, .4, .2, .2, .3,  1, .8, 0.4, 3)            # indicators board
    draw_single_circle(.014, .09, .4, .2, .2, .3, .6, .1, .1, 2.8)
    draw_single_rect(.1, .1, -.1, .4, .2, .2, .3, .1, .8, .9, 1.8)
   # arms & face (3rd layer)
    #arms
    draw_rect(.18, .1, .34, .19, .2, .3, .3, .5, .55, .6, 3)         # bottom mid
    draw_rect(.25, .08, .32, .28, .2, .3, .3, .85, .9, .95, 3)         # upper
    draw_rect(.125, .08, .381, .28, .2, .3, .3, .85, .9, .95, 3)       # upper in
    draw_rect(.25, .08, .32, .15, .2, .3, .3, .85, .9, .95, 3)         # lower
    draw_rect(.125, .08, .381, .15, .2, .3, .3, .85, .9, .95, 3)       # lower in
    draw_rect(.022, .17, .433, .22, .2, .3, .3, .85, .9, .95, 3)       # top mid
#  eyes / face
    glColor3f(.2, .3, .2)
    glBegin(GL_LINE_LOOP)
    for theta in np.arange(pi, 2 * pi, 0.01):
        x = .04 * cos(theta)
        y = .739 + .04 * sin(theta)
        glVertex(x, y)
    glEnd()
    draw_circle(.081, .119, .717, .2, .3, .2, .85, .9, .95, 3)
    draw_circle(.041, .0747, .787, .2, .3, .2, .85, .9, .95, 3)
    draw_circle(.065, .095, .75, .2, .3, .2, .3, .38, .45, 2.5)
    draw_circle(.031, .095, .75, .2, .3, .2, .25, .33, .4, .001)
    draw_circle(.013, .099, .73, .2, .3, .2, .999, .995, .97, .001)
    draw_circle(.009, .092, .78, .2, .3, .2, .999, .995, .97, .001)
    draw_circle(.007, .082, .76, .2, .3, .2, .999, .995, .97, .001)
    glFlush()


glutInit()
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
glutInitWindowSize(700, 700)
glutCreateWindow(b"first open gl program")
glutDisplayFunc(draw)
glutMainLoop()
